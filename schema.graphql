type User @entity {
    # user address
    id: ID!
    liquidity: BigDecimal!
    liquidityAge: BigInt!
    liquidityLastAddTime: BigInt!
    isTrade: Boolean!
    # trade volume
    tradeVolume: BigDecimal!
}

type LiquidityPool @entity {
    # liquidityPool address
    id: ID!
    collateralAddress: String!
    perpetuals: [Perpetual!]! @derivedFrom(field:"liquidityPool")
    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
}

type Perpetual @entity {
    # liquidity pool address + '-' +perpetual index
    id: ID!
    index: BigInt!
    collateralAddress: String!
    liquidityPool: LiquidityPool!
    createdAtTimestamp: BigInt!
    createdAtBlockNumber: BigInt!
}

type Trade @entity {
    # trasaction hash + "-" + index + "-" + close/open
    id: ID!
    perpetual: Perpetual!
    trader: User!
    amount: BigDecimal!
    price: BigDecimal!
    volume: BigDecimal!
    volumeUSD: BigDecimal!
    fee: BigDecimal!
    transactionHash: String!
    blockNumber: BigInt!
    timestamp: BigInt!
    logIndex: BigInt!
}
